{
  "timestamp": "2025-08-03 05:44:42",
  "total_duration": 171.81964540481567,
  "total_tests": 3,
  "passed": 3,
  "failed": 0,
  "results": [
    {
      "name": "ChefByte Tests",
      "script": "chefbyte_tests.py",
      "description": "Tests ChefByte MCP agent functionality",
      "success": true,
      "duration": 171.81468844413757,
      "stdout": "Attempting to reset data in database: data\\chefbyte.db\nInitializing ResetDB loader...\nConnected to SQLite database at: data\\chefbyte.db\n\nCalling loader to clear and load sample data...\nStarting complete database reload...\nStarting complete database clear...\n\nClearing saved meals...\n[OK] Saved meals cleared\n\nClearing new meal ideas...\nSQLite query execution error: no such function: pg_get_serial_sequence\nWarning: Could not find sequence for id column\n[OK] New meal ideas cleared\n\nClearing taste profile...\n[OK] Taste profile cleared\n\nClearing inventory (dropping table)...\n  Dropped table: inventory\n[OK] Inventory table recreated\n\nClearing daily planner...\n[OK] Daily planner cleared\n\nClearing shopping list...\n[OK] Shopping list cleared\n\nClearing ingredients foods (dropping table)...\n  Dropped table: ingredients_foods\n[OK] Ingredients foods table recreated\n\nClearing saved meals in stock IDs...\n[OK] Saved meals in stock IDs cleared\n\nClearing new meal ideas in stock IDs...\n[OK] New meal ideas in stock IDs cleared\n\nDone! All tables have been cleared.\nStarting complete database load...\n\nLoading ingredients foods with hardcoded IDs...\n  Ensuring ingredients_foods table exists...\n[OK] Added/Checked ingredient: Fairlife chocolate milk (ID: 101)\n[OK] Added/Checked ingredient: Whole milk (ID: 102)\n[OK] Added/Checked ingredient: Cream cheese (ID: 103)\n[OK] Added/Checked ingredient: Ground beef (ID: 104)\n[OK] Added/Checked ingredient: Bacon (ID: 105)\n[OK] Added/Checked ingredient: Garlic (ID: 106)\n[OK] Added/Checked ingredient: Ginger (ID: 107)\n[OK] Added/Checked ingredient: Spaghetti (ID: 108)\n[OK] Added/Checked ingredient: Parmesan cheese (ID: 109)\n[OK] Added/Checked ingredient: Butter (ID: 110)\n[OK] Added/Checked ingredient: Olive oil (ID: 111)\n[OK] Added/Checked ingredient: Thin-sliced steak (ID: 112)\n[OK] Added/Checked ingredient: White rice (ID: 113)\n[OK] Added/Checked ingredient: Black beans (ID: 114)\n[OK] Added/Checked ingredient: Tortilla (ID: 115)\n[OK] Added/Checked ingredient: Mayo (ID: 116)\n[OK] Added/Checked ingredient: Eggs (ID: 117)\n[OK] Added/Checked ingredient: Sourdough bread (ID: 118)\n[OK] Added/Checked ingredient: Pre-cooked chicken (ID: 119)\n[OK] Added/Checked ingredient: Shredded cheese (ID: 120)\n[OK] Added/Checked ingredient: Caesar dressing (ID: 121)\n[OK] Added/Checked ingredient: Instant ramen (ID: 122)\n[OK] Added/Checked ingredient: Non-chunky tomato sauce (ID: 123)\n[OK] Added/Checked ingredient: Pre-cooked pulled pork (ID: 124)\n[OK] Added/Checked ingredient: BBQ sauce (ID: 125)\n[OK] Added/Checked ingredient: Instant mashed potatoes (ID: 126)\n[OK] Added/Checked ingredient: Pre-cooked shrimp (ID: 127)\n[OK] Added/Checked ingredient: Onions (ID: 128)\n[OK] Added/Checked ingredient: Taco seasoning (ID: 129)\n[OK] Added/Checked ingredient: Taco shells (ID: 130)\n[OK] Added/Checked ingredient: Frozen mixed vegetables (ID: 131)\n[OK] Added/Checked ingredient: Microwaveable rice (ID: 132)\n[OK] Added/Checked ingredient: Rotisserie chicken (ID: 133)\n[OK] Added/Checked ingredient: Salmon (ID: 134)\n[OK] Added/Checked ingredient: Tortilla chips (ID: 135)\n[OK] Added/Checked ingredient: Sesame seeds (ID: 136)\n[OK] Added/Checked ingredient: Soy sauce (ID: 137)\n[OK] Added/Checked ingredient: Frozen waffles (ID: 138)\n[OK] Added/Checked ingredient: Microwave burrito (ID: 139)\n[OK] Added/Checked ingredient: Carrots (ID: 140)\n[OK] Added/Checked ingredient: Hamburger Bun (ID: 141)\n[OK] Added/Checked ingredient: Extra Sharp Cheddar (ID: 142)\n[OK] Added/Checked ingredient: Cornstarch (ID: 143)\n[OK] Added/Checked ingredient: Pepper (ID: 144)\n[OK] Added/Checked ingredient: Turkey sausage patties (ID: 145)\n[OK] Added/Checked ingredient: Chicken patties (ID: 146)\n[OK] Added/Checked ingredient: Sliced turkey (ID: 147)\n[OK] Added/Checked ingredient: Bread (ID: 148)\n[OK] Added/Checked ingredient: Sliced cheese (ID: 149)\n[OK] Added/Checked ingredient: Boxed mac and cheese (ID: 150)\n[OK] Added/Checked ingredient: Bagel (ID: 151)\n[OK] Added/Checked ingredient: Pasta (ID: 152)\n[OK] Added/Checked ingredient: Alfredo sauce (ID: 153)\n[OK] Added/Checked ingredient: Parsley (ID: 154)\n[OK] Added/Checked ingredient: Slider buns (ID: 155)\n[OK] Added/Checked ingredient: Chicken tenders (ID: 156)\n[OK] Added/Checked ingredient: Frozen fries (ID: 157)\n[OK] Added/Checked ingredient: Pesto (ID: 158)\n[OK] Added/Checked ingredient: Sloppy joe sauce (ID: 159)\n\nFinished loading ingredients foods: 59 succeeded, 0 failed.\n\nLoading saved meals...\n[OK] Added: Bacon Cheeseburger\n[OK] Added: Sesame Chicken\n[OK] Added: Magic Spaghetti\n[OK] Added: Steak Burrito\n[OK] Added: Breakfast Egg Sandwich\n[OK] Added: Homemade McChicken\n[OK] Added: Chicken Caesar Wrap\n[OK] Added: Turkey and Cheese Sandwich\n[OK] Added: Grilled Cheese Sandwich\n[OK] Added: Quesadilla\n[OK] Added: Mac and Cheese with Bacon\n[OK] Added: Instant Ramen with Egg\n[OK] Added: Bagel with Cream Cheese and Bacon\n[OK] Added: Spaghetti with Meat Sauce\n[OK] Added: Chicken Alfredo\n[OK] Added: Pulled Pork with BBQ\n[OK] Added: Shrimp Scampi\n[OK] Added: Philly Cheesesteak Sliders\n[OK] Added: Chicken Tenders and Fries\n[OK] Added: Beef Tacos\n[OK] Added: Stir-Fry with Pre-Cooked Chicken\n[OK] Added: Pasta with Pesto\n[OK] Added: Sloppy Joes\n\nLoading new meal ideas...\n[OK] Added meal idea: Garlic Salmon Pasta with id 20365\n[OK] Added meal idea: Bacon Egg Sourdough Toast with id 23178\n[OK] Added meal idea: Sesame Ginger Chicken Wrap with id 26111\n[OK] Added meal idea: Cheesy Chicken Tortilla Bake with id 29387\n[OK] Added meal idea: Bacon Egg Fried Rice with id 21507\n[OK] Added meal idea: Chicken Tomato Garlic Pasta with id 29935\n[OK] Added meal idea: Ginger Soy Salmon Stir-Fry with id 28448\n[OK] Added meal idea: Steak Cheddar Sourdough Melt with id 26499\n[OK] Added meal idea: Shrimp and Bacon Carbonara with id 28775\n\nLoading taste profile...\n[OK] Taste profile updated successfully\n\nLoading inventory...\n  Ensuring inventory table exists...\n[OK] Added: Ground beef (Qty: 1 lb, FoodID: 104)\n[OK] Added: Bacon (Qty: 12 oz, FoodID: 105)\n[OK] Added: Sesame seeds (Qty: 1 tbsp, FoodID: 136)\n[OK] Added: Soy sauce (Qty: 1/4 cup, FoodID: 137)\n[OK] Added: Garlic (Qty: 3 cloves, FoodID: 106)\n[OK] Added: Ginger (Qty: 1 inch piece, FoodID: 107)\n[OK] Added: Spaghetti (Qty: 1 box, FoodID: 108)\n[OK] Added: Parmesan cheese (Qty: 1 wedge, FoodID: 109)\n[OK] Added: Butter (Qty: 1 stick, FoodID: 110)\n[OK] Added: Olive oil (Qty: 500ml bottle, FoodID: 111)\n[OK] Added: Thin-sliced steak (Qty: 1 lb, FoodID: 112)\n[OK] Added: White rice (Qty: 2 cups, FoodID: 113)\n[OK] Added: Black beans (Qty: 1 can, FoodID: 114)\n[OK] Added: Tortilla (Qty: 1 pack (10 ct), FoodID: 115)\n[OK] Added: Mayo (Qty: 1 jar, FoodID: 116)\n[OK] Added: Eggs (Qty: 1 dozen, FoodID: 117)\n[OK] Added: Sourdough bread (Qty: 1 loaf, FoodID: 118)\n[OK] Added: Pre-cooked chicken (Qty: 1 lb, FoodID: 119)\n[OK] Added: Shredded cheese (Qty: 1 bag, FoodID: 120)\n[OK] Added: Caesar dressing (Qty: 1 bottle, FoodID: 121)\n[OK] Added: Instant ramen (Qty: 3 packs, FoodID: 122)\n[OK] Added: Non-chunky tomato sauce (Qty: 1 jar, FoodID: 123)\n[OK] Added: Pre-cooked pulled pork (Qty: 1 container, FoodID: 124)\n[OK] Added: BBQ sauce (Qty: 1 bottle, FoodID: 125)\n[OK] Added: Instant mashed potatoes (Qty: 1 box, FoodID: 126)\n[OK] Added: Pre-cooked shrimp (Qty: 1 lb, FoodID: 127)\n[OK] Added: Onions (Qty: 2, FoodID: 128)\n[OK] Added: Taco seasoning (Qty: 1 packet, FoodID: 129)\n[OK] Added: Taco shells (Qty: 1 box, FoodID: 130)\n[OK] Added: Frozen mixed vegetables (Qty: 1 bag, FoodID: 131)\n[OK] Added: Microwaveable rice (Qty: 1 pouch, FoodID: 132)\n[OK] Added: Rotisserie chicken (Qty: 1 whole, FoodID: 133)\n[OK] Added: Salmon (Qty: 1 fillet, FoodID: 134)\n[OK] Added: Tortilla chips (Qty: 1 bag, FoodID: 135)\n[OK] Added: Whole milk (Qty: 1 gallon, FoodID: 102)\n[OK] Added: Frozen waffles (Qty: 1 box, FoodID: 138)\n[OK] Added: Microwave burrito (Qty: 2, FoodID: 139)\n[OK] Added: Carrots (Qty: 1 bag, FoodID: 140)\n\nLoading daily planner...\n[OK] Added meals for 2025-08-03: Magic Spaghetti, Bacon Cheeseburger (IDs: [3, 1])\n[OK] Added meals for 2025-08-04: Breakfast Egg Sandwich, Sesame Chicken (IDs: [5, 2])\n[OK] Daily planner initialized with sample meal plans\n\nLoading shopping list...\n[OK] Shopping list loaded with 2 default items.\n\nUpdating all meal availability...\nConnected to SQLite database at: data\\chefbyte.db\n\n--- Checking Ingredient Availability ---\nChecking for: Thin-sliced steak (FoodID: 112, Needed: 4-6 oz)\n  [Unit Mismatch] Need unit '-6 oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: white rice (FoodID: 113, Needed: 1/2 cup, cooked)\n  [OK] Sufficient quantity (2.00 cup) confirmed.\nChecking for: black beans (FoodID: 114, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['can']. Cannot confirm quantity.\nChecking for: tortilla (FoodID: 115, Needed: 1 large)\n  [Unit Mismatch] Need unit 'large', have units: ['pack']. Cannot confirm quantity.\nChecking for: extra cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: mayo (FoodID: 116, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['jar']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Bread (FoodID: 148, Needed: 2 slices)\n  [Missing] Ingredient Type (FoodID: 148) not found in inventory.\nChecking for: butter (FoodID: 110, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['stick']. Cannot confirm quantity.\nChecking for: sliced cheese (FoodID: 149, Needed: 2 slices)\n  [Missing] Ingredient Type (FoodID: 149) not found in inventory.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Ground beef (FoodID: 104, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: taco seasoning (FoodID: 129, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['packet']. Cannot confirm quantity.\nChecking for: taco shells (FoodID: 130, Needed: 2-3)\n  [Unit Mismatch] Need unit '-3', have units: ['box']. Cannot confirm quantity.\nChecking for: cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Tortilla (FoodID: 115, Needed: 1 large)\n  [Unit Mismatch] Need unit 'large', have units: ['pack']. Cannot confirm quantity.\nChecking for: cheese (FoodID: 120, Needed: 1/2 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: pre-cooked chicken or turkey (FoodID: 119, Needed: 3 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Instant ramen (FoodID: 122, Needed: 1 package)\n  [Unit Mismatch] Need unit 'package', have units: ['pack']. Cannot confirm quantity.\nChecking for: egg (FoodID: 117, Needed: 1)\n  [Unit Mismatch] Need unit 'unit', have units: ['dozen']. Cannot confirm quantity.\nChecking for: water (FoodID: None, Needed: per package)\n  [WARN] Required ingredient 'water' has no FoodID. Cannot check availability by ID.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Ground beef (FoodID: 104, Needed: 1 patty (4-6 oz))\n  [Unit Mismatch] Need unit 'patty', have units: ['lb']. Cannot confirm quantity.\nChecking for: bacon (FoodID: 105, Needed: 2 strips)\n  [Unit Mismatch] Need unit 'strip', have units: ['oz']. Cannot confirm quantity.\nChecking for: burger bun (FoodID: 141, Needed: 1)\n  [Missing] Ingredient Type (FoodID: 141) not found in inventory.\nChecking for: extra sharp cheddar (FoodID: 142, Needed: 1 slice)\n  [Missing] Ingredient Type (FoodID: 142) not found in inventory.\nChecking for: condiments (FoodID: None, Needed: 1 tbsp each)\n  [WARN] Required ingredient 'condiments' has no FoodID. Cannot check availability by ID.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-cooked pulled pork (FoodID: 124, Needed: 6 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['container']. Cannot confirm quantity.\nChecking for: BBQ sauce (FoodID: 125, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bottle']. Cannot confirm quantity.\nChecking for: instant mashed potatoes or rice (FoodID: 126, Needed: 1 serving)\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Ground beef (FoodID: 104, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: sloppy joe sauce (FoodID: 159, Needed: 1/4 cup)\n  [Missing] Ingredient Type (FoodID: 159) not found in inventory.\nChecking for: hamburger buns (FoodID: None, Needed: 1)\n  [WARN] Required ingredient 'hamburger buns' has no FoodID. Cannot check availability by ID.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pasta (FoodID: 152, Needed: 1 serving (2 oz dry))\n  [Missing] Ingredient Type (FoodID: 152) not found in inventory.\nChecking for: store-bought pesto (FoodID: 158, Needed: 1/4 cup)\n  [Missing] Ingredient Type (FoodID: 158) not found in inventory.\nChecking for: parmesan cheese (FoodID: 109, Needed: 1 tbsp, grated)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['wedge']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Spaghetti (FoodID: 108, Needed: 1 serving (2 oz dry))\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\nChecking for: ground beef (FoodID: 104, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: non-chunky tomato sauce (FoodID: 123, Needed: 1/2 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['jar']. Cannot confirm quantity.\nChecking for: parmesan (FoodID: 109, Needed: 1 tbsp, grated)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['wedge']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Thinly sliced steak (FoodID: 112, Needed: 6 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: slider buns (FoodID: 155, Needed: 3)\n  [Missing] Ingredient Type (FoodID: 155) not found in inventory.\nChecking for: cheese (FoodID: 120, Needed: 1/2 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: onions (FoodID: 128, Needed: 1/4 cup, sliced)\n  [Unit Mismatch] Need unit 'cup', have units: ['unit']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Spaghetti (FoodID: 108, Needed: 1 serving (2 oz dry))\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\nChecking for: parmesan cheese (FoodID: 109, Needed: 2 tbsp, grated)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['wedge']. Cannot confirm quantity.\nChecking for: butter (FoodID: 110, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['stick']. Cannot confirm quantity.\nChecking for: olive oil (FoodID: 111, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\nChecking for: pepper (FoodID: 144, Needed: 1/4 tsp)\n  [Missing] Ingredient Type (FoodID: 144) not found in inventory.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-cooked chicken (FoodID: 119, Needed: 3-4 oz, sliced)\n  [Unit Mismatch] Need unit '-4 oz, sliced', have units: ['lb']. Cannot confirm quantity.\nChecking for: tortilla (FoodID: 115, Needed: 1 large)\n  [Unit Mismatch] Need unit 'large', have units: ['pack']. Cannot confirm quantity.\nChecking for: shredded cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: Caesar dressing (FoodID: 121, Needed: 2 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['bottle']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Eggs (FoodID: 117, Needed: 1-2)\n  [Unit Mismatch] Need unit '-2', have units: ['dozen']. Cannot confirm quantity.\nChecking for: cheese (FoodID: 120, Needed: 1 slice or 2 tbsp)\n  [Unit Mismatch] Need unit 'slice', have units: ['bag']. Cannot confirm quantity.\nChecking for: turkey sausage patties (FoodID: 145, Needed: 1-2)\n  [Missing] Ingredient Type (FoodID: 145) not found in inventory.\nChecking for: sourdough bread (FoodID: 118, Needed: 2 slices)\n  [Unit Mismatch] Need unit 'slice', have units: ['loaf']. Cannot confirm quantity.\nChecking for: mayo (FoodID: 116, Needed: 1 tsp)\n  [Unit Mismatch] Need unit 'tsp', have units: ['jar']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-cooked shrimp (FoodID: 127, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: pasta (FoodID: 152, Needed: 1 serving (2 oz dry))\n  [Missing] Ingredient Type (FoodID: 152) not found in inventory.\nChecking for: garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: butter (FoodID: 110, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['stick']. Cannot confirm quantity.\nChecking for: olive oil (FoodID: 111, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\nChecking for: parsley (FoodID: 154, Needed: 1 tsp, chopped)\n  [Missing] Ingredient Type (FoodID: 154) not found in inventory.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Bagel (FoodID: 151, Needed: 1)\n  [Missing] Ingredient Type (FoodID: 151) not found in inventory.\nChecking for: cream cheese (FoodID: 103, Needed: 2 tbsp)\n  [Missing] Ingredient Type (FoodID: 103) not found in inventory.\nChecking for: bacon (FoodID: 105, Needed: 2 strips, cooked)\n  [Unit Mismatch] Need unit 'strip', have units: ['oz']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-cooked chicken strips (FoodID: 119, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: frozen mixed vegetables (FoodID: 131, Needed: 1 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: soy sauce (FoodID: 137, Needed: 2 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['cup']. Cannot confirm quantity.\nChecking for: microwaveable rice (FoodID: 132, Needed: 1 serving)\n  [Unit Mismatch] Need unit 'serving', have units: ['pouch']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Chicken pieces (FoodID: 119, Needed: 6 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: sesame seeds (FoodID: 136, Needed: 1 tsp)\n  [Unit Mismatch] Need unit 'tsp', have units: ['tbsp']. Cannot confirm quantity.\nChecking for: soy sauce (FoodID: 137, Needed: 2 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['cup']. Cannot confirm quantity.\nChecking for: garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: ginger (FoodID: 107, Needed: 1/2 tsp, minced)\n  [Unit Mismatch] Need unit 'tsp', have units: ['inch']. Cannot confirm quantity.\nChecking for: cornstarch (FoodID: 143, Needed: 1 tsp)\n  [Missing] Ingredient Type (FoodID: 143) not found in inventory.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pasta (FoodID: 152, Needed: 1 serving (2 oz dry))\n  [Missing] Ingredient Type (FoodID: 152) not found in inventory.\nChecking for: store-bought Alfredo sauce (FoodID: 153, Needed: 1/2 cup)\n  [Missing] Ingredient Type (FoodID: 153) not found in inventory.\nChecking for: pre-cooked chicken (FoodID: 119, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Chicken patties (FoodID: 146, Needed: 1)\n  [Missing] Ingredient Type (FoodID: 146) not found in inventory.\nChecking for: burger buns (FoodID: 141, Needed: 1)\n  [Missing] Ingredient Type (FoodID: 141) not found in inventory.\nChecking for: mayo (FoodID: 116, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['jar']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-breaded chicken tenders (FoodID: 156, Needed: 3-4)\n  [Missing] Ingredient Type (FoodID: 156) not found in inventory.\nChecking for: frozen fries (FoodID: 157, Needed: 1 serving)\n  [Missing] Ingredient Type (FoodID: 157) not found in inventory.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Sliced turkey (FoodID: 147, Needed: 3-4 slices)\n  [Missing] Ingredient Type (FoodID: 147) not found in inventory.\nChecking for: cheese (FoodID: 120, Needed: 1-2 slices or 1/4 cup)\n  [Unit Mismatch] Need unit '-2 slices or 1/4 cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: toasted sourdough or bagel (FoodID: 118, Needed: 2 slices / 1 bagel)\n  [Unit Mismatch] Need unit 'slice', have units: ['loaf']. Cannot confirm quantity.\nChecking for: mayo (FoodID: 116, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['jar']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Boxed mac and cheese (FoodID: 150, Needed: 1 box (prepared))\n  [Missing] Ingredient Type (FoodID: 150) not found in inventory.\nChecking for: bacon bits (FoodID: 105, Needed: 2 tbsp, cooked & crumbled)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['oz']. Cannot confirm quantity.\n--- Availability Check Finished ---\nUpdated saved meals availability. 8 meals are available.\n\n--- Checking Ingredient Availability ---\nChecking for: salmon (FoodID: 134, Needed: 1 fillet (4-6 oz))\n  [OK] Sufficient quantity (1.00 fillet) confirmed.\nChecking for: spaghetti (FoodID: 108, Needed: 1 serving (2 oz dry))\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\nChecking for: garlic (FoodID: 106, Needed: 2 cloves, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: olive oil (FoodID: 111, Needed: 2 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\nChecking for: parmesan cheese (FoodID: 109, Needed: 2 tbsp, grated)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['wedge']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Bacon (FoodID: 105, Needed: 2 strips, chopped)\n  [Unit Mismatch] Need unit 'strip', have units: ['oz']. Cannot confirm quantity.\nChecking for: Eggs (FoodID: 117, Needed: 1-2)\n  [Unit Mismatch] Need unit '-2', have units: ['dozen']. Cannot confirm quantity.\nChecking for: White rice (FoodID: 113, Needed: 1 cup, cooked & cooled)\n  [OK] Sufficient quantity (2.00 cup) confirmed.\nChecking for: Onion (FoodID: 128, Needed: 1/4 cup, chopped)\n  [Unit Mismatch] Need unit 'cup', have units: ['unit']. Cannot confirm quantity.\nChecking for: Garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: Frozen mixed vegetables (FoodID: 131, Needed: 1/2 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: Soy sauce (FoodID: 137, Needed: 1-2 tbsp)\n  [Unit Mismatch] Need unit '-2 tbsp', have units: ['cup']. Cannot confirm quantity.\nChecking for: Olive oil (FoodID: 111, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: sourdough bread (FoodID: 118, Needed: 2 slices)\n  [Unit Mismatch] Need unit 'slice', have units: ['loaf']. Cannot confirm quantity.\nChecking for: eggs (FoodID: 117, Needed: 2)\n  [Unit Mismatch] Need unit 'unit', have units: ['dozen']. Cannot confirm quantity.\nChecking for: bacon (FoodID: 105, Needed: 2 strips, cooked)\n  [Unit Mismatch] Need unit 'strip', have units: ['oz']. Cannot confirm quantity.\nChecking for: shredded cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: butter (FoodID: 110, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['stick']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: rotisserie chicken (FoodID: 133, Needed: 4 oz, shredded)\n  [Unit Mismatch] Need unit 'oz', have units: ['whole']. Cannot confirm quantity.\nChecking for: tortilla (FoodID: 115, Needed: 1 large)\n  [Unit Mismatch] Need unit 'large', have units: ['pack']. Cannot confirm quantity.\nChecking for: garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: ginger (FoodID: 107, Needed: 1/2 tsp, minced)\n  [Unit Mismatch] Need unit 'tsp', have units: ['inch']. Cannot confirm quantity.\nChecking for: sesame seeds (FoodID: 136, Needed: 1 tsp)\n  [Unit Mismatch] Need unit 'tsp', have units: ['tbsp']. Cannot confirm quantity.\nChecking for: soy sauce (FoodID: 137, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['cup']. Cannot confirm quantity.\nChecking for: shredded cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Thin-sliced steak (FoodID: 112, Needed: 4-6 oz)\n  [Unit Mismatch] Need unit '-6 oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: Sourdough bread (FoodID: 118, Needed: 2 slices)\n  [Unit Mismatch] Need unit 'slice', have units: ['loaf']. Cannot confirm quantity.\nChecking for: Shredded cheese (FoodID: 120, Needed: 1/4 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: Onion (FoodID: 128, Needed: 1/4 cup, sliced)\n  [Unit Mismatch] Need unit 'cup', have units: ['unit']. Cannot confirm quantity.\nChecking for: Butter (FoodID: 110, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['stick']. Cannot confirm quantity.\nChecking for: Mayo (FoodID: 116, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['jar']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Salmon (FoodID: 134, Needed: 1 fillet (4-6 oz))\n  [OK] Sufficient quantity (1.00 fillet) confirmed.\nChecking for: Frozen mixed vegetables (FoodID: 131, Needed: 1 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: Onion (FoodID: 128, Needed: 1/4 cup, chopped)\n  [Unit Mismatch] Need unit 'cup', have units: ['unit']. Cannot confirm quantity.\nChecking for: Garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: Ginger (FoodID: 107, Needed: 1/2 tsp, minced)\n  [Unit Mismatch] Need unit 'tsp', have units: ['inch']. Cannot confirm quantity.\nChecking for: Soy sauce (FoodID: 137, Needed: 2 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['cup']. Cannot confirm quantity.\nChecking for: Microwaveable rice (FoodID: 132, Needed: 1 serving)\n  [Unit Mismatch] Need unit 'serving', have units: ['pouch']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Pre-cooked shrimp (FoodID: 127, Needed: 4 oz)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: Bacon (FoodID: 105, Needed: 2 strips, chopped)\n  [Unit Mismatch] Need unit 'strip', have units: ['oz']. Cannot confirm quantity.\nChecking for: Eggs (FoodID: 117, Needed: 1 yolk + 1 whole)\n  [Unit Mismatch] Need unit 'yolk', have units: ['dozen']. Cannot confirm quantity.\nChecking for: Spaghetti (FoodID: 108, Needed: 1 serving (2 oz dry))\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\nChecking for: Parmesan cheese (FoodID: 109, Needed: 1/4 cup, grated)\n  [Unit Mismatch] Need unit 'cup', have units: ['wedge']. Cannot confirm quantity.\nChecking for: Olive oil (FoodID: 111, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\nChecking for: Garlic (FoodID: 106, Needed: 1 clove, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: pre-cooked chicken (FoodID: 119, Needed: 6 oz, chopped)\n  [Unit Mismatch] Need unit 'oz', have units: ['lb']. Cannot confirm quantity.\nChecking for: tortilla (FoodID: 115, Needed: 3-4 small)\n  [Unit Mismatch] Need unit '-4 small', have units: ['pack']. Cannot confirm quantity.\nChecking for: non-chunky tomato sauce (FoodID: 123, Needed: 1 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['jar']. Cannot confirm quantity.\nChecking for: shredded cheese (FoodID: 120, Needed: 1 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['bag']. Cannot confirm quantity.\nChecking for: onions (FoodID: 128, Needed: 1/4 cup, chopped)\n  [Unit Mismatch] Need unit 'cup', have units: ['unit']. Cannot confirm quantity.\n--- Availability Check Finished ---\n\n--- Checking Ingredient Availability ---\nChecking for: Rotisserie chicken (FoodID: 133, Needed: 4 oz, shredded)\n  [Unit Mismatch] Need unit 'oz', have units: ['whole']. Cannot confirm quantity.\nChecking for: Spaghetti (FoodID: 108, Needed: 1 serving (2 oz dry))\n  [Unit Mismatch] Need unit 'serving', have units: ['box']. Cannot confirm quantity.\nChecking for: Non-chunky tomato sauce (FoodID: 123, Needed: 1/2 cup)\n  [Unit Mismatch] Need unit 'cup', have units: ['jar']. Cannot confirm quantity.\nChecking for: Garlic (FoodID: 106, Needed: 2 cloves, minced)\n  [OK] Sufficient quantity (3.00 clove) confirmed.\nChecking for: Olive oil (FoodID: 111, Needed: 1 tbsp)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['ml']. Cannot confirm quantity.\nChecking for: Parmesan cheese (FoodID: 109, Needed: 2 tbsp, grated)\n  [Unit Mismatch] Need unit 'tbsp', have units: ['wedge']. Cannot confirm quantity.\n--- Availability Check Finished ---\nUpdated new meal ideas availability. 9 meal ideas are available.\nDisconnected from SQLite database.\n[OK] Found 8 saved meals and 9 meal ideas that can be made with current inventory\n\nDone! All tables have been loaded with sample data.\n\nDone! Database has been completely reloaded with sample data.\n\nDatabase reset and sample data loading complete.\nDisconnecting loader database connection.\nDisconnected from SQLite database.\n\nCreating baseline database snapshot...\nConnected to SQLite database at: data\\chefbyte.db\n\nAttempting to create database snapshot... \n  Closing current DB connection before snapshot...\nDisconnected from SQLite database.\n[OK] Database snapshot created successfully at: data\\chefbyte_baseline.db\n[RUN] Starting parallel test execution...\n=== Prompt Set 1: Get Inventory Context Test ===\nDescription: Test retrieving kitchen inventory using get_inventory_context tool\n\n1. You: Show my kitchen inventory.\n   Thinking...\n=== Prompt Set 2: Get Taste Profile Context Test ===\nDescription: Test retrieving saved taste preferences using get_taste_profile_context tool\n\n1. You: What is my taste profile?\n   Thinking...\n=== Prompt Set 3: Get Saved Meals Context Test ===\nDescription: Test retrieving stored meals using get_saved_meals_context tool\n\n1. You: List my saved meals.\n   Thinking...\n=== Prompt Set 4: Get Shopping List Context Test ===\nDescription: Test retrieving shopping list using get_shopping_list_context tool\n\n1. You: What is on my shopping list?\n   Thinking...\n=== Prompt Set 5: Get Daily Notes Context Test ===\nDescription: Test retrieving weekly meal plan using get_daily_notes_context tool. There will only be a few meals.\n\n1. You: Show my meal plan for the week.\n   Thinking...\n=== Prompt Set 6: Get Instock Meals Context Test ===\nDescription: Test retrieving meals possible with current inventory using get_instock_meals_context tool\n\n1. You: What meals can I make with what I have?\n   Thinking...\n=== Prompt Set 7: Get Ingredients Info Context Test ===\nDescription: Test retrieving ingredient tips using get_ingredients_info_context tool\n\n1. You: Provide ingredient tips.\n   Thinking...\n=== Prompt Set 8: Update Inventory Test ===\nDescription: Test updating inventory using update_inventory tool\n\n1. You: Add two apples to my inventory.\n   Thinking...\n=== Prompt Set 9: Update Taste Profile Test ===\nDescription: Test updating taste profile using update_taste_profile tool\n\n1. You: I now prefer spicy food.\n   Thinking...\n=== Prompt Set 10: Update Saved Meals Test ===\nDescription: Test saving a meal using update_saved_meals tool\n\n1. You: Save grilled cheese sandwich. It takes 10 minutes to make. Ingredients: 2 slices bread, 2 slices cheese, 1 tbsp butter. Recipe: Butter the bread, add cheese, cook in pan until golden brown.\n   Thinking...\n=== Prompt Set 11: Update Shopping List Test ===\nDescription: Test modifying shopping list using update_shopping_list tool\n\n1. You: Add milk to my shopping list.\n   Thinking...\n=== Prompt Set 12: Update Daily Plan Test ===\nDescription: Test updating daily meal plan using update_daily_plan tool\n\n1. You: Schedule pasta for tomorrow.\n   Thinking...\n=== Prompt Set 13: Run Meal Planner Test ===\nDescription: Test executing meal planning workflow using run_meal_planner tool\n\n1. You: i want to plan some meals for today. something quick and easy\n   Thinking...\n=== Prompt Set 14: Run Meal Suggestion Generator Test ===\nDescription: Test generating meal suggestions using run_meal_suggestion_generator tool\n\n1. You: Suggest a dinner using chicken.\n   Thinking...\n=== Prompt Set 15: Run New Meal Ideator Test ===\nDescription: Test generating creative new recipes using run_new_meal_ideator tool\n\n1. You: Invent a new quick and easy meal that is high protien.\n   Thinking...\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 21.74s)\n\n--- History for Get Saved Meals Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to retrieve the stored meals correctly using the get_saved_meals_context tool, indicating a lack of memory recall for the specific information provided.\nConfidence: high\n[TIME] Individual test time: 23.42 seconds\n==================================================\n\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 40.60s)\n\n--- History for Update Taste Profile Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to accurately recall and update the taste profile as specified in the test description. It did not demonstrate clear memory of the specific information provided in the previous interactions.\nConfidence: high\n[TIME] Individual test time: 42.13 seconds\n==================================================\n\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 51.47s)\n\n2. You: I like the first one\n   Thinking...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Get Inventory Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Run Meal Suggestion Generator Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Get Shopping List Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Get Daily Notes Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Get Instock Meals Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n2. You: yes\n   Thinking...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Get Taste Profile Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Update Daily Plan Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Get Ingredients Info Context Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.05s)\n\n--- History for Update Saved Meals Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.05s)\n\n--- History for Update Shopping List Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.05s)\n\n--- History for Update Inventory Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to recall specific meal suggestions based on the provided criteria in the test description. It did not utilize the run_meal_suggestion_generator tool effectively, leading to irrelevant or generic responses instead of tailored meal suggestions.\nConfidence: high\n[TIME] Individual test time: 61.42 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to accurately recall the specific ingredient tips requested during the test. It provided incorrect or incomplete information that did not align with the expected output based on the context provided.\nConfidence: high\n[TIME] Individual test time: 61.57 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to accurately recall the meals available based on the current inventory. It did not utilize the get_instock_meals_context tool effectively, leading to incorrect or incomplete information being provided.\nConfidence: high\n[TIME] Individual test time: 61.58 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to correctly update the shopping list as per the instructions provided in the test description. It did not recall the previous items or modifications accurately, leading to an incomplete or incorrect shopping list.\nConfidence: high\n[TIME] Individual test time: 61.69 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to accurately recall the specific inventory items and their quantities that were previously provided. It did not update the inventory correctly based on the initial input, indicating a lack of memory retention.\nConfidence: high\n[TIME] Individual test time: 61.81 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to accurately recall and update the daily meal plan as per the instructions provided in the test description. It did not utilize the update_daily_plan tool effectively, leading to incorrect or incomplete updates.\nConfidence: high\n[TIME] Individual test time: 61.82 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to retrieve the saved taste preferences accurately, indicating a lack of memory recall for the specific information provided in the test description.\nConfidence: high\n[TIME] Individual test time: 61.87 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not successfully recall the specific meal information that was supposed to be saved using the update_saved_meals tool. There was no evidence in the chat log that the AI remembered the details of the meal or confirmed its successful update.\nConfidence: high\n[TIME] Individual test time: 62.16 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to retrieve the shopping list context as it did not provide the expected output when prompted. The chat log does not show any successful recall of the shopping list information.\nConfidence: high\n[TIME] Individual test time: 62.22 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to recall the specific meals from the weekly meal plan as required by the test. There was no mention of the meals in the chat log, indicating a lack of memory retention.\nConfidence: high\n[TIME] Individual test time: 62.43 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to accurately recall the kitchen inventory information when prompted, indicating a lack of memory retention for the specific details provided in the test description.\nConfidence: high\n[TIME] Individual test time: 62.52 seconds\n==================================================\n\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n3. You: yes save it\n   Thinking...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.04s)\n\n--- History for Run Meal Planner Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to recall specific meal planning details provided earlier in the conversation, indicating a lack of memory retention for the task requirements.\nConfidence: high\n[TIME] Individual test time: 121.53 seconds\n==================================================\n\n   Agent: Could you please clarify what you would like me to save? (took 54.86s)\n   [Session ID: 4b64410c...]\n\n--- History for Run New Meal Ideator Test ---\n1. You: yes save it\n   Agent: Could you please clarify what you would like me to save? (took 54.86s)\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI did not demonstrate memory or recall of any specific information related to the meal ideator test. Instead, it asked for clarification on what to save, indicating a lack of retention of prior context or details provided by the user.\nConfidence: high\n[TIME] Individual test time: 168.05 seconds\n==================================================\n\n\n[DONE] All tests completed!\n[TIME] Total parallel execution time: 168.06 seconds\n[SUMMARY] TEST RESULTS\n============================================================\n[FAIL] Get Inventory Context Test: FAILED\n   [TIME] Test time: 62.52s\n   [REASON] The AI failed to accurately recall the kitchen inventory information when prompted, indicating a lack of memory retention for the specific details provided in the test description.\n   [CONF] high\n\n[FAIL] Get Taste Profile Context Test: FAILED\n   [TIME] Test time: 61.87s\n   [REASON] The AI failed to retrieve the saved taste preferences accurately, indicating a lack of memory recall for the specific information provided in the test description.\n   [CONF] high\n\n[FAIL] Get Saved Meals Context Test: FAILED\n   [TIME] Test time: 23.42s\n   [REASON] The AI failed to retrieve the stored meals correctly using the get_saved_meals_context tool, indicating a lack of memory recall for the specific information provided.\n   [CONF] high\n\n[FAIL] Get Shopping List Context Test: FAILED\n   [TIME] Test time: 62.22s\n   [REASON] The AI failed to retrieve the shopping list context as it did not provide the expected output when prompted. The chat log does not show any successful recall of the shopping list information.\n   [CONF] high\n\n[FAIL] Get Daily Notes Context Test: FAILED\n   [TIME] Test time: 62.43s\n   [REASON] The AI failed to recall the specific meals from the weekly meal plan as required by the test. There was no mention of the meals in the chat log, indicating a lack of memory retention.\n   [CONF] high\n\n[FAIL] Get Instock Meals Context Test: FAILED\n   [TIME] Test time: 61.58s\n   [REASON] The AI failed to accurately recall the meals available based on the current inventory. It did not utilize the get_instock_meals_context tool effectively, leading to incorrect or incomplete information being provided.\n   [CONF] high\n\n[FAIL] Get Ingredients Info Context Test: FAILED\n   [TIME] Test time: 61.57s\n   [REASON] The AI failed to accurately recall the specific ingredient tips requested during the test. It provided incorrect or incomplete information that did not align with the expected output based on the context provided.\n   [CONF] high\n\n[FAIL] Update Inventory Test: FAILED\n   [TIME] Test time: 61.81s\n   [REASON] The AI failed to accurately recall the specific inventory items and their quantities that were previously provided. It did not update the inventory correctly based on the initial input, indicating a lack of memory retention.\n   [CONF] high\n\n[FAIL] Update Taste Profile Test: FAILED\n   [TIME] Test time: 42.13s\n   [REASON] The AI failed to accurately recall and update the taste profile as specified in the test description. It did not demonstrate clear memory of the specific information provided in the previous interactions.\n   [CONF] high\n\n[FAIL] Update Saved Meals Test: FAILED\n   [TIME] Test time: 62.16s\n   [REASON] The AI did not successfully recall the specific meal information that was supposed to be saved using the update_saved_meals tool. There was no evidence in the chat log that the AI remembered the details of the meal or confirmed its successful update.\n   [CONF] high\n\n[FAIL] Update Shopping List Test: FAILED\n   [TIME] Test time: 61.69s\n   [REASON] The AI failed to correctly update the shopping list as per the instructions provided in the test description. It did not recall the previous items or modifications accurately, leading to an incomplete or incorrect shopping list.\n   [CONF] high\n\n[FAIL] Update Daily Plan Test: FAILED\n   [TIME] Test time: 61.82s\n   [REASON] The AI failed to accurately recall and update the daily meal plan as per the instructions provided in the test description. It did not utilize the update_daily_plan tool effectively, leading to incorrect or incomplete updates.\n   [CONF] high\n\n[FAIL] Run Meal Planner Test: FAILED\n   [TIME] Test time: 121.53s\n   [REASON] The AI failed to recall specific meal planning details provided earlier in the conversation, indicating a lack of memory retention for the task requirements.\n   [CONF] high\n\n[FAIL] Run Meal Suggestion Generator Test: FAILED\n   [TIME] Test time: 61.42s\n   [REASON] The AI failed to recall specific meal suggestions based on the provided criteria in the test description. It did not utilize the run_meal_suggestion_generator tool effectively, leading to irrelevant or generic responses instead of tailored meal suggestions.\n   [CONF] high\n\n[FAIL] Run New Meal Ideator Test: FAILED\n   [TIME] Test time: 168.05s\n   [REASON] The AI did not demonstrate memory or recall of any specific information related to the meal ideator test. Instead, it asked for clarification on what to save, indicating a lack of retention of prior context or details provided by the user.\n   [CONF] high\n\n============================================================\n[STATS] OVERALL RESULTS:\n   Total Tests: 15\n   Passed: 0\n   Failed: 15\n   Pass Rate: 0.0%\n\n[TIME] TIMING SUMMARY:\n   Total Test Time (sequential): 1036.21s\n   Actual Runtime (parallel): 168.06s\n============================================================\n",
      "stderr": "",
      "return_code": 0
    },
    {
      "name": "CoachByte Tests",
      "script": "coachbyte_tests.py",
      "description": "Tests CoachByte MCP agent functionality",
      "success": true,
      "duration": 73.46684980392456,
      "stdout": "Loading comprehensive 3-day MMA workout sample data...\nCreating schema...\nClearing existing data...\nCreated daily log for 2025-08-01\nCreated daily log for 2025-08-02\nCreated daily log for 2025-08-03\nAdded exercise: push-ups (ID: 854)\nAdded exercise: pull-ups (ID: 855)\nAdded exercise: bench press (ID: 856)\nAdded exercise: overhead press (ID: 857)\nAdded exercise: rows (ID: 858)\nAdded exercise: dips (ID: 859)\nAdded exercise: squats (ID: 860)\nAdded exercise: deadlifts (ID: 861)\nAdded exercise: bodyweight squats (ID: 862)\nAdded exercise: walking lunges (ID: 863)\nAdded exercise: calf raises (ID: 864)\nAdded exercise: plank (ID: 865)\nAdded exercise: burpees (ID: 866)\nAdded exercise: mountain climbers (ID: 867)\n\nComprehensive sample data loaded successfully!\nDatabase contains:\n- 14 exercises\n- 54 planned sets across 3 workouts\n- 41 completed sets\n- 3 daily logs (2025-08-01, 2025-08-02, 2025-08-03)\n- Day 1 (2025-08-01): Upper body focus - 17 planned, 17 completed\n- Day 2 (2025-08-02): Lower body focus - 18 planned, 17 completed\n- Day 3 (2025-08-03): Full body conditioning - 19 planned, 7 completed\n[RUN] Starting parallel test execution...\n=== Prompt Set 1: New Daily Plan Test ===\nDescription: Test adding a new daily plan set to the database using new_daily_plan tool\n\n1. You: Plan bench press 10 reps at 135 pounds as set 1 for today.\n   Thinking...\n=== Prompt Set 2: Get Today Plan Test ===\nDescription: Test retrieving today's planned sets using get_today_plan tool\n\n1. You: What is today's workout plan?\n   Thinking...\n=== Prompt Set 3: Log Completed Set Test ===\nDescription: Test logging an unplanned set with log_completed_set tool\n\n1. You: Log 20 push-ups at bodyweight.\n   Thinking...\n=== Prompt Set 4: Complete Planned Set Test ===\nDescription: Test marking the next planned set complete using complete_planned_set tool\n\n1. You: Complete the planned set.\n   Thinking...\n=== Prompt Set 5: Update Summary Test ===\nDescription: Test updating today's workout summary using update_summary tool\n\n1. You: Update today's summary to 'Felt strong today.'\n   Thinking...\n=== Prompt Set 6: Recent History Test ===\nDescription: Test retrieving recent workout history using get_recent_history tool\n\n1. You: Show my workout history for the last 1 day.\n   Thinking...\n=== Prompt Set 7: Set Weekly Split Day Test ===\nDescription: Test storing weekly split for a day using set_weekly_split_day tool\n\n1. You: Set Monday split to bench press 5 reps at 135 pounds.\n   Thinking...\n=== Prompt Set 8: Get Weekly Split Test ===\nDescription: Test retrieving weekly split for a day using get_weekly_split tool\n\n1. You: What is my split for Monday?\n   Thinking...\n=== Prompt Set 9: Set Timer Test ===\nDescription: Test setting a rest timer using set_timer tool\n\n1. You: Set a rest timer for 1 minute.\n   Thinking...\n=== Prompt Set 10: Get Timer Test ===\nDescription: Test checking timer status using get_timer tool\n\n1. You: Set a rest timer for 1 minute.\n   Thinking...\n   Agent: The rest timer is set for 1 minute. Let me know if you need anything else! (took 14.18s)\n   [Session ID: 4b64410c...]\n\n2. You: Check my timer.\n   Thinking...\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 32.23s)\n\n--- History for Log Completed Set Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: The Monday split has been set to bench press with 5 reps at 135 pounds. (took 32.48s)\n   [Session ID: 4b64410c...]\n\n--- History for Set Weekly Split Day Test ---\n1. You: Set Monday split to bench press 5 reps at 135 pounds.\n   Agent: The Monday split has been set to bench press with 5 reps at 135 pounds. (took 32.48s)\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Today's workout summary has been updated to: \"Felt strong today.\" Is there anything else you would like to do? (took 32.59s)\n   [Session ID: 4b64410c...]\n\n--- History for Update Summary Test ---\n1. You: Update today's summary to 'Felt strong today.'\n   Agent: Today's workout summary has been updated to: \"Felt strong today.\" Is there anything else you would like to do? (took 32.59s)\n==================================================\n\n[AI] Judging test with LLM...\nResult: [PASS]\nReason: The AI successfully updated the workout summary to 'Felt strong today.' and confirmed the update, demonstrating clear memory and recall of the specific information provided.\nConfidence: high\n[TIME] Individual test time: 34.08 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not successfully log the unplanned set using the log_completed_set tool as required by the test description. There is no evidence in the chat log that the AI recalled or utilized the necessary information to complete the task.\nConfidence: high\n[TIME] Individual test time: 34.34 seconds\n==================================================\n\nResult: [PASS]\nReason: The AI successfully stored and recalled the information regarding the Monday split, specifically the exercise (bench press), the number of reps (5), and the weight (135 pounds). This indicates that the AI has demonstrated clear memory of the specific information provided.\nConfidence: high\n[TIME] Individual test time: 34.76 seconds\n==================================================\n\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 41.20s)\n\n--- History for Get Weekly Split Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to recall the specific weekly split information when prompted, indicating a lack of memory retention for the required data.\nConfidence: high\n[TIME] Individual test time: 42.47 seconds\n==================================================\n\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.01s)\n\n--- History for Get Today Plan Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.01s)\n\n--- History for Recent History Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for New Daily Plan Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Complete Planned Set Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Set Timer Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to retrieve today's planned sets using the get_today_plan tool, indicating a lack of memory or recall of the specific information required for the task.\nConfidence: high\n[TIME] Individual test time: 61.43 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to retrieve the recent workout history as it did not provide any specific details or data from the get_recent_history tool. There was no evidence of memory recall regarding the user's workout history.\nConfidence: high\n[TIME] Individual test time: 61.53 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not demonstrate clear memory of the specific information regarding the planned set, as it failed to utilize the complete_planned_set tool correctly. There was no indication in the chat log that the AI acknowledged or executed the task as described in the test.\nConfidence: high\n[TIME] Individual test time: 61.80 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not successfully recall the specific details of the new daily plan that was supposed to be added to the database. There was no evidence of the AI remembering the parameters or specifics of the daily plan as required by the test description.\nConfidence: high\n[TIME] Individual test time: 61.89 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not successfully recall the specific information needed to set the timer as per the test description. There was no evidence in the chat log that the AI engaged with the set_timer tool or provided a valid response related to setting a timer.\nConfidence: high\n[TIME] Individual test time: 62.21 seconds\n==================================================\n\n   Agent: Error making request - 500 Server Error: Internal Server Error for url: http://192.168.0.38:7860/api/v1/run/4b64410c-ffa2-4782-803c-d3cc810a32d9 (took 53.38s)\n   [Session ID: 4b64410c...]\n\n--- History for Get Timer Test ---\n1. You: Set a rest timer for 1 minute.\n   Agent: The rest timer is set for 1 minute. Let me know if you need anything else! (took 14.18s)\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI did not demonstrate memory recall of the timer status after setting it. There is no follow-up or confirmation of the timer's status, which is essential for the test.\nConfidence: high\n[TIME] Individual test time: 70.66 seconds\n==================================================\n\n\n[DONE] All tests completed!\n[TIME] Total parallel execution time: 70.67 seconds\n[SUMMARY] TEST RESULTS\n============================================================\n[FAIL] New Daily Plan Test: FAILED\n   [TIME] Test time: 61.89s\n   [REASON] The AI did not successfully recall the specific details of the new daily plan that was supposed to be added to the database. There was no evidence of the AI remembering the parameters or specifics of the daily plan as required by the test description.\n   [CONF] high\n\n[FAIL] Get Today Plan Test: FAILED\n   [TIME] Test time: 61.43s\n   [REASON] The AI failed to retrieve today's planned sets using the get_today_plan tool, indicating a lack of memory or recall of the specific information required for the task.\n   [CONF] high\n\n[FAIL] Log Completed Set Test: FAILED\n   [TIME] Test time: 34.34s\n   [REASON] The AI did not successfully log the unplanned set using the log_completed_set tool as required by the test description. There is no evidence in the chat log that the AI recalled or utilized the necessary information to complete the task.\n   [CONF] high\n\n[FAIL] Complete Planned Set Test: FAILED\n   [TIME] Test time: 61.80s\n   [REASON] The AI did not demonstrate clear memory of the specific information regarding the planned set, as it failed to utilize the complete_planned_set tool correctly. There was no indication in the chat log that the AI acknowledged or executed the task as described in the test.\n   [CONF] high\n\n[PASS] Update Summary Test: PASSED\n   [TIME] Test time: 34.08s\n   [REASON] The AI successfully updated the workout summary to 'Felt strong today.' and confirmed the update, demonstrating clear memory and recall of the specific information provided.\n   [CONF] high\n\n[FAIL] Recent History Test: FAILED\n   [TIME] Test time: 61.53s\n   [REASON] The AI failed to retrieve the recent workout history as it did not provide any specific details or data from the get_recent_history tool. There was no evidence of memory recall regarding the user's workout history.\n   [CONF] high\n\n[PASS] Set Weekly Split Day Test: PASSED\n   [TIME] Test time: 34.76s\n   [REASON] The AI successfully stored and recalled the information regarding the Monday split, specifically the exercise (bench press), the number of reps (5), and the weight (135 pounds). This indicates that the AI has demonstrated clear memory of the specific information provided.\n   [CONF] high\n\n[FAIL] Get Weekly Split Test: FAILED\n   [TIME] Test time: 42.47s\n   [REASON] The AI failed to recall the specific weekly split information when prompted, indicating a lack of memory retention for the required data.\n   [CONF] high\n\n[FAIL] Set Timer Test: FAILED\n   [TIME] Test time: 62.21s\n   [REASON] The AI did not successfully recall the specific information needed to set the timer as per the test description. There was no evidence in the chat log that the AI engaged with the set_timer tool or provided a valid response related to setting a timer.\n   [CONF] high\n\n[FAIL] Get Timer Test: FAILED\n   [TIME] Test time: 70.66s\n   [REASON] The AI did not demonstrate memory recall of the timer status after setting it. There is no follow-up or confirmation of the timer's status, which is essential for the test.\n   [CONF] high\n\n============================================================\n[STATS] OVERALL RESULTS:\n   Total Tests: 10\n   Passed: 2\n   Failed: 8\n   Pass Rate: 20.0%\n\n[TIME] TIMING SUMMARY:\n   Total Test Time (sequential): 525.16s\n   Actual Runtime (parallel): 70.67s\n============================================================\n",
      "stderr": "",
      "return_code": 0
    },
    {
      "name": "GeneralByte Tests",
      "script": "generalbyte_tests.py",
      "description": "Tests GeneralByte MCP agent functionality",
      "success": true,
      "duration": 65.16571474075317,
      "stdout": "[RUN] Starting parallel test execution...\n=== Prompt Set 1: Send Notification Test ===\nDescription: Test sending a phone notification with title\n\n1. You: Send me a notification with title 'Test Alert' and message 'This is a test notification from GeneralByte'\n   Thinking...\n=== Prompt Set 2: Add Todo Item Test ===\nDescription: Test adding a todo item with expiration date to the todo.todo entity\n\n1. You: Add 'Buy groceries' to the todo.todo list with due date 2025-02-15\n   Thinking...\n=== Prompt Set 3: Get Todo List Test ===\nDescription: Test retrieving the contents of the todo.todo list\n\n1. You: Show me my todo.todo list\n   Thinking...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.02s)\n\n--- History for Add Todo Item Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Send Notification Test ---\n==================================================\n\n[AI] Judging test with LLM...\n   Agent: Error making request - HTTPConnectionPool(host='192.168.0.38', port=7860): Read timed out. (read timeout=60) (took 60.03s)\n\n--- History for Get Todo List Test ---\n==================================================\n\n[AI] Judging test with LLM...\nResult: [FAIL]\nReason: The AI failed to retrieve the contents of the todo.todo list as required by the test description. There was no evidence in the chat log indicating that the AI successfully remembered or recalled any specific items from the list.\nConfidence: high\n[TIME] Individual test time: 61.57 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI did not successfully recall the specific information regarding the test description, which required sending a phone notification with a title. There was no evidence in the chat log that the AI attempted to perform this action or referenced the necessary components of the test.\nConfidence: high\n[TIME] Individual test time: 62.08 seconds\n==================================================\n\nResult: [FAIL]\nReason: The AI failed to recall the specific details regarding the addition of a todo item with an expiration date to the todo.todo entity. There was no mention of the expiration date or the correct format for adding the item, indicating a lack of memory retention.\nConfidence: high\n[TIME] Individual test time: 63.09 seconds\n==================================================\n\n\n[DONE] All tests completed!\n[TIME] Total parallel execution time: 63.09 seconds\n[SUMMARY] TEST RESULTS\n============================================================\n[FAIL] Send Notification Test: FAILED\n   [TIME] Test time: 62.08s\n   [REASON] The AI did not successfully recall the specific information regarding the test description, which required sending a phone notification with a title. There was no evidence in the chat log that the AI attempted to perform this action or referenced the necessary components of the test.\n   [CONF] high\n\n[FAIL] Add Todo Item Test: FAILED\n   [TIME] Test time: 63.09s\n   [REASON] The AI failed to recall the specific details regarding the addition of a todo item with an expiration date to the todo.todo entity. There was no mention of the expiration date or the correct format for adding the item, indicating a lack of memory retention.\n   [CONF] high\n\n[FAIL] Get Todo List Test: FAILED\n   [TIME] Test time: 61.57s\n   [REASON] The AI failed to retrieve the contents of the todo.todo list as required by the test description. There was no evidence in the chat log indicating that the AI successfully remembered or recalled any specific items from the list.\n   [CONF] high\n\n============================================================\n[STATS] OVERALL RESULTS:\n   Total Tests: 3\n   Passed: 0\n   Failed: 3\n   Pass Rate: 0.0%\n\n[TIME] TIMING SUMMARY:\n   Total Test Time (sequential): 186.75s\n   Actual Runtime (parallel): 63.09s\n============================================================\n",
      "stderr": "",
      "return_code": 0
    }
  ]
}