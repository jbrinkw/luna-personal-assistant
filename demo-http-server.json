{
  "name": "demo_http_server",
  "display_name": "Demo HTTP Server",
  "description": "Simple Python HTTP server for testing external services upload functionality",
  "category": "application",
  "author": "Luna Team",
  "version": "1.0.0",
  
  "config_form": {
    "fields": [
      {
        "name": "port",
        "label": "Server Port",
        "type": "number",
        "default": 9876,
        "required": true,
        "help": "Port for the HTTP server to listen on"
      },
      {
        "name": "message",
        "label": "Welcome Message",
        "type": "text",
        "default": "Demo HTTP Server is running!",
        "required": false,
        "help": "Custom message to display on the server"
      }
    ]
  },
  
  "commands": {
    "install": "mkdir -p external_services/demo_http_server .luna/logs && echo 'from http.server import HTTPServer, BaseHTTPRequestHandler\nimport json\nimport sys\n\nclass Handler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        if self.path == \"/health\":\n            self.send_response(200)\n            self.send_header(\"Content-type\", \"application/json\")\n            self.end_headers()\n            self.wfile.write(json.dumps({\"status\": \"healthy\", \"message\": \"{{message}}\"}).encode())\n        else:\n            self.send_response(200)\n            self.send_header(\"Content-type\", \"text/html\")\n            self.end_headers()\n            html = f\"\"\"<!DOCTYPE html>\n<html><head><title>Demo Server</title></head>\n<body style=\"font-family: Arial; text-align: center; padding: 50px;\">\n<h1>Demo HTTP Server</h1>\n<p style=\"font-size: 1.2em;\">{{message}}</p>\n<p>Port: {{port}}</p>\n<p><a href=\"/health\">Health Check</a></p>\n</body></html>\"\"\"\n            self.wfile.write(html.encode())\n    def log_message(self, format, *args):\n        pass\n\nif __name__ == \"__main__\":\n    port = int(sys.argv[1]) if len(sys.argv) > 1 else 9876\n    print(f\"Starting server on port {port}\")\n    server = HTTPServer((\"\", port), Handler)\n    server.serve_forever()' > external_services/demo_http_server/server.py && echo 'Demo HTTP Server installed' >> .luna/logs/demo_http_server.log",
    "uninstall": "pkill -f 'python.*demo_http_server/server.py' || true",
    "start": "cd external_services/demo_http_server && nohup python3 server.py {{port}} >> /root/luna/luna-personal-assistant/.luna/logs/demo_http_server.log 2>&1 & echo $! > /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid && echo 'Demo HTTP Server started on port {{port}}' >> /root/luna/luna-personal-assistant/.luna/logs/demo_http_server.log",
    "stop": "if [ -f /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid ]; then kill $(cat /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid) 2>/dev/null || true; rm /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid; echo 'Demo HTTP Server stopped' >> /root/luna/luna-personal-assistant/.luna/logs/demo_http_server.log; fi",
    "restart": "if [ -f /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid ]; then kill $(cat /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid) 2>/dev/null || true; rm /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid; fi && sleep 2 && cd external_services/demo_http_server && nohup python3 server.py {{port}} >> /root/luna/luna-personal-assistant/.luna/logs/demo_http_server.log 2>&1 & echo $! > /root/luna/luna-personal-assistant/external_services/demo_http_server/server.pid && echo 'Demo HTTP Server restarted on port {{port}}' >> /root/luna/luna-personal-assistant/.luna/logs/demo_http_server.log",
    "health_check": "curl -f http://localhost:{{port}}/health 2>/dev/null",
    "enable_startup": "echo 'Auto-start not implemented for demo server' >> .luna/logs/demo_http_server.log",
    "disable_startup": "echo 'Auto-start disabled for demo server' >> .luna/logs/demo_http_server.log"
  },
  
  "health_check_expected": "healthy",
  "install_timeout": 30,
  "working_dir": "/root/luna/luna-personal-assistant",
  
  "required_vars": ["DEMO_SERVER_PORT"],
  "provides_vars": ["DEMO_SERVER_URL", "DEMO_SERVER_PORT"]
}

